<launch>
  <arg name="lidar_id" default="lidar" doc="possible value: [lidar, lidar2]"/>
  <arg name="robot_ns" default="" doc="robot name + '/' or empty"/>

  <arg name="robot_prefix" value="$(eval robot_ns + '/' if robot_ns else '')"/>

  <include if="1" file="$(find romea_gps_ntrip)/launch/centipede_tcp.launch">
    <!-- <arg name="mountpoint" value=""/> -->
    <arg name="gps_host" value="192.168.0.50"/>
    <arg name="gps_nmea_port" value="1001"/>
    <arg name="gps_rtcm_port" value="1002"/>
    <arg name="robot_ns" value="$(arg robot_ns)"/>
    <arg name="gps_ns" value="gps"/>
  </include>

  <node name="xsens_driver" pkg="xsens_driver" type="mtnode.py" output="screen">
    <param name="frame_id" value="$(arg robot_prefix)imu_link"/>
    <!-- <param name="frame_local" value="NED"/> -->
    <param name="device" value="/dev/imu"/>
    <!-- <param name="device" value="/dev/ttyUSB3"/> -->
    <!--        <param name="device" value="/dev/ttyUSB1"/>-->
    <param name="baudrate" value="115200"/>
    <param name="timeout" value=".01"/>
    <param name="initial_wait" value="1."/>
    <remap from="/imu/data" to="/$(arg robot_prefix)imu/data"/>
  </node>

  <group ns="lidar" if="1">
    <!--
      <node name="lidar_edge" pkg="lms1xx" type="LMS1xx_node">
      &#60;&#33;&#45;&#45; <param name="frame_id" value="$(arg robot_prefix)$(arg lidar_id)_link"/> &#45;&#45;&#62;
      <param name="frame_id" value="lidar2_link"/>
      &#60;&#33;&#45;&#45; <param name="host" value="192.168.1.20" /> &#45;&#45;&#62;
      <param name="host" value="192.168.0.20" />
      <param name="publish_min_range_as_inf" value="False" />
      &#60;&#33;&#45;&#45; <remap from="lidar/scan" to="$(arg lidar_id)/scan"/> &#45;&#45;&#62;
      &#60;&#33;&#45;&#45; <remap from="/leader/lidar/scan" to="/leader/lidar2/scan"/> &#45;&#45;&#62;
      <remap from="/lidar/scan" to="/lidar2/scan"/>
      </node>
    -->

    <node if="0" name="lms1xx" pkg="lms1xx" type="LMS1xx_node">
      <!-- <param name="frame_id" value="$(arg robot_prefix)lidar_link"/> -->
      <param name="frame_id" value="$(arg robot_prefix)lidar2_link"/>

      <param name="host" value="192.168.0.1" />
      <!-- <param name="host" value="192.168.0.20" /> -->
      <!-- <param name="host" value="192.168.1.20" /> -->

      <param name="publish_min_range_as_inf" value="False" />
      <!-- <remap from="/lidar/scan" to="/$(arg robot_prefix)lidar/scan"/> -->
      <remap from="/lidar/scan" to="/$(arg robot_prefix)lidar2/scan"/>
    </node>

    <!--
      <node name="lidar_mrs" pkg="lms1xx" type="LMS1xx_node">
      <param name="frame_id" value="$(arg robot_prefix)lidar_mrs_link"/>
      &#60;&#33;&#45;&#45; <param name="host" value="192.168.0.1" /> &#45;&#45;&#62;
      <param name="host" value="192.168.1.20" />
      <param name="publish_min_range_as_inf" value="False" />
      &#60;&#33;&#45;&#45; <remap from="/lidar/scan" to="/lidar2/scan"/> &#45;&#45;&#62;
      &#60;&#33;&#45;&#45; <remap from="/lidar/scan" to="$(arg robot_prefix)/lidar2/scan"/> &#45;&#45;&#62;
      </node>
    -->

    <include if="0" file="$(find sick_scan)/launch/sick_mrs_1xxx.launch">
      <arg name="hostname" value="192.168.0.22"/>
      <arg name="frame_id" value="$(arg robot_prefix)lidar2_link"/>
      <arg name="cloud_topic" value="/$(arg robot_prefix)lidar2/points"/>
      <!-- <arg name="frame_id" value="$(arg robot_prefix)lidar_link"/> -->
      <!-- <arg name="cloud_topic" value="/$(arg robot_prefix)lidar/points"/> -->
    </include>
  </group>

  <group ns="camera" if="0">
    <node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
      <param name="video_device" value="/dev/video2" />
      <param name="image_width" value="2560" />
      <param name="image_height" value="720" />
      <param name="pixel_format" value="yuyv" />
      <param name="camera_frame_id" value="usb_cam" />
      <param name="io_method" value="mmap"/>
      <param name="framerate" value="2"/>
    </node>
    <node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
      <remap from="image" to="usb_cam/image_raw"/>
      <param name="autosize" value="true" />
    </node>

  </group>
</launch>
