# command: select one type of command. available: [classic, predictive]
# sliding_observer: select one type of sliding observer.
#                   available: [without, cimenatic, cinematic_lyapunov]
command: classic
sliding_observer: without

# desired_linear_speed: target speed of the control law. unit: m/s
# desired_lateral_deviation: distance to the curvilinear abscissa of the path to follow. unit: m
# desired_course_deviation: angle between the robot and the path (only for robot with 2 axles
#                           steering). unit: rad
# desired_linear_speed: 2.2
desired_linear_speed: 1.0
desired_lateral_deviation: 0.
desired_course_deviation: 0.

# maximal_steering_angle: limit the maximal steering angle published by the control law.
#                         it also takes into account the geometric limits of the robot. unit: rad
# minimal_linear_speed_command: minimal speed published by the control law. unit m/s
maximal_steering_angle: 1.57
minimal_linear_speed_command: 0.35

# fsm_steering_angle_threshold: threshold on the steering angle to transit in the state machine.
#                               unit: rad
# steering_zero_threshold: minimal steering angle that is not considered as zero. unit: rad
# steering_angle_deadzone: minimal steering angle of the command that have an effect on the robot
#                          unit: rad
# enable_steering_noise: if enabled, add a gaussian noise to the command (used to handle deadzone)
# steering_noise: standard deviation of the gaussian noise. unit: rad
fsm_steering_angle_threshold: 0.05
steering_zero_threshold: 0.001
steering_angle_deadzone: 0.001
enable_steering_noise: true
steering_noise: 0.03

# autostart: start following after initialisation
# automatic_linear_speed_control: adapt the robot speed depending of the path
# stop_at_the_end: publish a null speed when the robot reaches the end of the path
# use_path_velocity: use the speed information stored in the path data
# rear_steering_command_enabled: enable the control of the rear axle of a 2-axles steering robot
# debug: enable creation of .csv file
# display: enable rviz marker messages
autostart: false
automatic_linear_speed_control: true
stop_at_the_end: false
use_path_velocity: false
rear_steering_command_enabled: true
debug: true
display: true

# controller: type of the control of the node. Available: [joystick]
# rate: maximal frequency of the command publisher. unit: Hz
controller: joystick
joy_start_button: 2
joy_stop_button: 1
rate: 20.

# configuration of the different commands
commands:
  classic:
    gains:
      front_kp: 0.4
      rear_kp: 0.5

  predictive:
    gains:
      front_kp: 0.6
      rear_kp: 0.7
    prediction:
      horizon: 10.
      a0: 0.1642
      a1: 0.1072
      b1: 1.0086
      b2: -0.2801

# configuration of the different sliding observers
observers:
  cinematic_linear_tangent:
    gains:
      lateral_deviation: -4.
      course_deviation: -2.
    filter_weights:
      lateral_deviation: 0.9
      course_deviation: 0.9
      front_sliding_angle: 0.96
      rear_sliding_angle: 0.9

  cinematic_lyapounov:
    gains:
      x_deviation: -2.
      y_deviation: -2.1
      course_deviation: -2.
      front_sliding_angle: -1.5
      rear_sliding_angle: -0.8
